<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="$(SolutionDir)ToolingVersions.props" />
  <!-- Debug builds produce a console app; otherwise a Windows app -->
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <OutputType>Exe</OutputType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' != 'Debug'">
    <OutputType>WinExe</OutputType>
  </PropertyGroup>

  <PropertyGroup>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <StartupObject>HyperVExtension.DevSetupEngine.Program</StartupObject>
    <UseWinUI>false</UseWinUI>
    <CsWinRTEnabled>false</CsWinRTEnabled>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <BuildRing Condition="'$(BuildRing)'==''">Dev</BuildRing>
    <Platforms>x86;x64;arm64</Platforms>
    <RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
    <PublishProfile Condition="'$(BuildingInsideVisualStudio)' != 'True'">Properties\PublishProfiles\win10-$(Platform).pubxml</PublishProfile>
    <SelfContained>true</SelfContained>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants Condition="'$(BuildRing)'=='Canary'">$(DefineConstants);CANARY_BUILD</DefineConstants>
    <DefineConstants Condition="'$(BuildRing)'=='Stable'">$(DefineConstants);STABLE_BUILD</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="8.0.0" />
    <PackageReference Include="Microsoft.Windows.CsWin32" Version="0.3.49-beta">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.0.4" />

    <!--
    Microsoft.WindowsPackageManager.ComInterop nuget targets .NET Framework:
    https://www.nuget.org/packages/Microsoft.WindowsPackageManager.ComInterop#readme-body-tab
    To workaround this issue in this .net project:
    - Suppress warning 1701 (Package not compatible)
    - Do not include nuget assets
    - Generate a property for this package so the path can be referenced
    - Copy the WINMD to the $(TargetDir) before the build starts
    - Feed the $(TargetDir)\WINMD path to CsWinRT in order to generate the projected classes
    NOTE: Suppressing the warning only is not enough as this will cause CoreClrInitFailure (0x80008089) error.
    -->
    <PackageReference Include="Microsoft.WindowsPackageManager.ComInterop" Version="1.7.10091-preview">
      <NoWarn>NU1701</NoWarn>
      <GeneratePathProperty>true</GeneratePathProperty>
      <IncludeAssets>none</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.WindowsPackageManager.Configuration.OutOfProc" Version="1.7.10091-preview">
      <GeneratePathProperty>True</GeneratePathProperty>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\DevSetupEngineProjection\DevSetupEngineProjection.csproj" />
    <ProjectReference Include="..\Logging\HyperVExtension.Logging.csproj" />
  </ItemGroup>

  <ItemGroup>
    <ReferenceCopyLocalPaths Include="$(ProjectDir)..\DevSetupEngineProjection\bin\$(Platform)\$(Configuration)\**\Microsoft.Windows.DevHome.DevSetupEngine.winmd" />
  </ItemGroup>
</Project>
