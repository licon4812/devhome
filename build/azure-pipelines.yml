trigger:
- main
- staging
- release

parameters:
- name: SignOutput
  type: boolean
  default: False
- name: Platforms
  type: object
  default:
  - x86
  - x64
  - arm64
- name: Configurations
  type: object
  default:
  - Debug
  - Release

variables:
 # MSIXVersion's second part should always be odd to account for stub app's version
  MSIXVersion: '0.1201'
  VersionOfSDK: '0.300'
  solution: '**/DevHome.sln'
  appxPackageDir: 'AppxPackages'
  testOutputArtifactDir: 'TestResults'

resources:
  repositories:
  - repository: templates_onebranch
    type: git
    name: OneBranch.Pipelines/GovernedTemplates
    ref: refs/heads/main
  - repository: m365Pipelines
    type: git
    name: 1ESPipelineTemplates/M365GPT
    ref: refs/tags/release

extends:
  template: v1/M365.Official.PipelineTemplate.yml@m365Pipelines
  parameters:
    sdl:
      roslyn:
        enabled: true
      arrow:
        serviceConnection: DevHome Build VM Generation
      sourceRepositoriesToScan:
        include:
        - repository: git://Dart/DevHomeStub
      baseline:
        baselineFile: $(Build.SourcesDirectory)\guardian\SDL\.gdnbaselines
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: Build_SDK
      dependsOn: []
      jobs:
      - job: Build_SDK
        steps:
        - task: NuGetToolInstaller@1

        - task: NuGetAuthenticate@1
          inputs:
            nuGetServiceConnections: 'DevHomeInternal'

        - task: PowerShell@2
          displayName: Build SDK
          name: BuildSDKCommand
          inputs:
            filePath: 'Build.ps1'
            arguments: -Configuration "Release" -VersionOfSDK $(VersionOfSDK) -BuildStep "sdk" -IsAzurePipelineBuild

        - task: PublishSymbols@2
          displayName: Publish Symbols
          inputs:
            SearchPattern: '**/bin/**/*.pdb'
            IndexSources: false
            SymbolServerType: TeamServices
            SymbolsProduct: DevHomeSDK

        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifacts'
            artifactName: SdkNugetPackage
            targetPath: extensionsdk\_build

    - stage: Build_StubPackages
      dependsOn: []
      jobs:
      - job: Build_StubPackages
        steps:
        - checkout: self
          path: s

        - checkout: git://Dart/DevHomeStub

        - task: NuGetToolInstaller@1

        - task: NuGetAuthenticate@1
          inputs:
            nuGetServiceConnections: 'DevHomeInternal'

        - task: PowerShell@2
          displayName: Build Stub Packages
          inputs:
            filePath: 'Build.ps1'
            arguments: -Configuration "Release" -Version $(MSIXVersion) -BuildStep "stubpackages" -IsAzurePipelineBuild

        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish MSIX Bundle Artifacts'
            artifactName: MsixBundle_Stub
            targetPath: DevHomeStub\DevHomeStubPackage\AppxPackages

    - stage: Build_DevHome
      dependsOn: Build_SDK
      condition: in(dependencies.Build_SDK.result, 'Succeeded')
      variables:
        VersionOfSDK: $[stageDependencies.Build_SDK.Build_SDK.outputs['BuildSDKCommand.VersionOfSDK']]
      jobs:
      - ${{ each configuration in parameters.Configurations }}:
        - ${{ each platform in parameters.Platforms }}:
          - job: Build_${{ platform }}_${{ configuration }}
            steps:
            - task: NuGetToolInstaller@1

            - task: NuGetAuthenticate@1
              inputs:
                nuGetServiceConnections: 'DevHomeInternal'

            - task: PowerShell@2
              displayName: Replace Stubbed Files
              inputs:
                filePath: 'build/scripts/Unstub.ps1'

            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'SdkNugetPackage'
                targetPath: '$(Pipeline.Workspace)\sdkArtifacts\'

            - task: MicrosoftTDBuild.tdbuild-task.tdbuild-task.TouchdownBuildTask@1
              displayName: Send and Download Localization Files for Artifacts
              condition: and(eq(variables['EnableLocalization'], 'true'), eq(variables['UpdateLocalization'], 'true'))
              inputs:
                teamId: 71220
                authId: $(TouchdownAppId)
                authKey: $(TouchdownAppKey)
                resourceFilePath: |
                  **\en-US\*.resw
                  **\en-US\PDP.xml
                outputDirectoryRoot: LocOutput
                localizationTarget: true
                appendRelativeDir: true
                pseudoSetting: Included

            - task: MicrosoftTDBuild.tdbuild-task.tdbuild-task.TouchdownBuildTask@1
              displayName: Download and Use Localization Files
              condition: eq(variables['EnableLocalization'], 'true')
              retryCountOnTaskFailure: 2
              inputs:
                teamId: 71220
                authId: $(TouchdownAppId)
                authKey: $(TouchdownAppKey)
                resourceFilePath: |
                  **\en-US\*.resw
                  **\en-US\PDP.xml
                localizationTarget: false
                appendRelativeDir: true
                pseudoSetting: Included

            - task: PowerShell@2
              displayName: Move Loc files one level up
              condition: eq(variables['EnableLocalization'], 'true')
              inputs:
                targetType: inline
                script: >-
                  $Files = Get-ChildItem . -R -Filter 'Resources.resw' | ? FullName -Like '*en-US\*\Resources.resw'
                  
                  $Files | % { Move-Item -Verbose $_.Directory $_.Directory.Parent.Parent -EA:Ignore }

                  $Files = Get-ChildItem . -R -Filter 'PDP.xml' | ? FullName -Like '*en-US\*\PDP.xml'

                  $Files | % { Move-Item -Verbose $_.Directory $_.Directory.Parent.Parent -EA:Ignore }
                pwsh: true

            - task: PowerShell@2
              displayName: Archive Loc Output for Submission
              condition: and(eq(variables['EnableLocalization'], 'true'), eq(variables['UpdateLocalization'], 'true'))
              inputs:
                targetType: inline
                script: >-
                  New-Item -Path 'locArchive' -ItemType Directory
                  
                  tar czf locArchive\LocOutput.tar.gz LocOutput
                pwsh: true

            - task: PowerShell@2
              displayName: Build Dev Home
              retryCountOnTaskFailure: 2
              inputs:
                filePath: 'Build.ps1'
                arguments: -Platform "${{ platform }}" -Configuration "${{ configuration }}" -Version $(MSIXVersion) -BuildStep "fullMsix" -AzureBuildingBranch "$(BuildingBranch)" -IsAzurePipelineBuild

            - task: EsrpCodeSigning@2
              inputs:
                ConnectedServiceName: 'Xlang Code Signing'
                FolderPath: '$(appxPackageDir)\${{ configuration }}'
                Pattern: '*.msix'
                signConfigType: 'inlineSignParams'
                inlineOperation: |
                  [
                    {
                      "keycode": "CP-230012",
                      "operationSetCode": "SigntoolvNextSign",
                      "parameters": [
                        {
                          "parameterName": "OpusName",
                          "parameterValue": "Microsoft"
                        },
                        {
                          "parameterName": "OpusInfo",
                          "parameterValue": "http://www.microsoft.com"
                        },
                        {
                          "parameterName": "PageHash",
                          "parameterValue": "/NPH"
                        },
                        {
                          "parameterName": "FileDigest",
                          "parameterValue": "/fd sha256"
                        },
                        {
                          "parameterName": "TimeStamp",
                          "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                        }
                      ],
                      "toolName": "signtool.exe",
                      "toolVersion": "6.2.9304.0"
                    }
                  ]
                SessionTimeout: '60'
                MaxConcurrency: '50'
                MaxRetryAttempts: '5'

            # Commented out until our implementation is fixed
            # - task: AzureKeyVault@1
            #   inputs:
            #     azureSubscription: 'DevHomeAzureServiceConnection'
            #     KeyVaultName: 'DevHomeKeyVault'
            #     SecretsFilter: 'ApiScanConnectionString'
            #     RunAsPreJob: false

            # - task: APIScan@2
            #   inputs:
            #     softwareFolder: '$(Build.StagingDirectory)'
            #     softwareName: 'Dev Home'
            #     softwareVersionNum: '1.0'
            #     softwareBuildNum: '$(Build.BuildId)'
            #     symbolsFolder: 'SRV*http://symweb'
            #   env:
            #     AzureServicesAuthConnectionString: $(ApiScanConnectionString)

            - task: Windows Application Driver@0
              condition: and(always(), ne('${{ platform}}', 'arm64'))
              inputs:
                OperationType: 'Start'

            - task: PowerShell@2
              displayName: 'Run Unittests'
              condition: ne('${{ platform}}', 'arm64')
              inputs:
                filePath: 'Test.ps1'
                arguments: -Platform "${{ platform }}" -Configuration "${{ configuration }}" -IsAzurePipelineBuild

            - task: Windows Application Driver@0
              condition: and(always(), ne('${{ platform}}', 'arm64'))
              inputs:
                OperationType: 'Stop'

            - task: PublishTestResults@2
              displayName: 'Add Test Results to ADO'
              condition: and(always(), ne('${{ platform}}', 'arm64'))
              inputs:
                testResultsFormat: 'VSTest'
                testResultsFiles: '*.trx'
                searchFolder: '$(testOutputArtifactDir)'
                mergeTestResults: true
                failTaskOnFailedTests: true
                testRunTitle: '$(Agent.JobName)'
                buildPlatform: '${{ platform }}'
                buildConfiguration: '${{ configuration }}'

            - task: PublishSymbols@2
              displayName: Publish Symbols
              inputs:
                SearchPattern: >-
                  $(Build.SourcesDirectory)\**\bin\**\*.pdb

                  $(Build.SourcesDirectory)\**\obj\**\*.r2r.ni.pdb
                IndexSources: true
                SymbolServerType: TeamServices
                SymbolsProduct: DevHome

            templateContext:
              outputs:
              - output: pipelineArtifact
                displayName: 'Publish Artifact: Binaries'
                artifactName: Binaries_${{ platform }}_${{ configuration }}
                targetPath: $(Build.SourcesDirectory)\src\bin
                sbomPackageName: devhome.binaries
                sbomPackageVersion: $(MSIXVersion)
              - output: pipelineArtifact
                displayName: 'Publish Artifact: LocOutput'
                condition: and(eq(variables['EnableLocalization'], 'true'), eq(variables['UpdateLocalization'], 'true'))
                artifactName: LocOutput_${{ platform }}_${{ configuration }}
                targetPath: LocArchive
                sbomPackageName: devhome.locoutput
                sbomPackageVersion: $(MSIXVersion)
              - output: pipelineArtifact
                displayName: 'Publish Test Results'
                condition: and(always(), ne('${{ platform}}', 'arm64'))
                artifactName: TestResults_${{ platform }}_${{ configuration }}
                targetPath: $(testOutputArtifactDir)
                sbomPackageName: devhome.testresults
                sbomPackageVersion: $(MSIXVersion)
              - output: pipelineArtifact
                displayName: Publish MSIX Artifact
                artifactName: msix_${{ platform }}_${{ configuration }}
                targetPath: $(appxPackageDir)\${{ configuration }}
                sbomPackageName: devhome.msixpackage
                sbomPackageVersion: $(MSIXVersion)

    - stage: Build_MsixBundle
      dependsOn: [Build_DevHome, Build_StubPackages]
      condition: in(dependencies.Build_DevHome.result, 'Succeeded')
      jobs:
      - job: Build_MsixBundles
        steps:
        - ${{ each configuration in parameters.Configurations }}:
          - ${{ each platform in parameters.Platforms }}:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: msix_${{ platform }}_${{ configuration }}
                targetPath: $(appxPackageDir)\${{ configuration }}

          - task: PowerShell@2
            displayName: Create Stub Directory
            condition: and(eq(variables['BuildingBranch'], 'release'), eq('${{ configuration }}', 'Release'))
            inputs:
              targetType: 'inline'
              script: New-Item -Path $(appxPackageDir)\${{ configuration }}\AppxMetadata\Stub -ItemType Directory

          - task: DownloadPipelineArtifact@2
            condition: and(eq(variables['BuildingBranch'], 'release'), eq('${{ configuration }}', 'Release'))
            inputs:
              buildType: 'current'
              artifactName: MsixBundle_Stub
              targetPath: $(appxPackageDir)\Staging

          - task: PowerShell@2
            displayName: Unbundle Stub Packages
            condition: and(eq(variables['BuildingBranch'], 'release'), eq('${{ configuration }}', 'Release'))
            inputs:
              filePath: 'build/scripts/UnbundleStubPackage.ps1'
              arguments: -InputPath $(appxPackageDir)\Staging -OutputLocation $(appxPackageDir)\${{ configuration }}\AppxMetadata\Stub

          - task: EsrpCodeSigning@2
            condition: and(eq(variables['BuildingBranch'], 'release'), eq('${{ configuration }}', 'Release'))
            inputs:
              ConnectedServiceName: 'Xlang Code Signing'
              FolderPath: '$(appxPackageDir)\${{ configuration }}\AppxMetadata\Stub'
              Pattern: '*.msix'
              signConfigType: 'inlineSignParams'
              inlineOperation: |
                [
                  {
                    "keycode": "CP-230012",
                    "operationSetCode": "SigntoolvNextSign",
                    "parameters": [
                      {
                        "parameterName": "OpusName",
                        "parameterValue": "Microsoft"
                      },
                      {
                        "parameterName": "OpusInfo",
                        "parameterValue": "http://www.microsoft.com"
                      },
                      {
                        "parameterName": "PageHash",
                        "parameterValue": "/NPH"
                      },
                      {
                        "parameterName": "FileDigest",
                        "parameterValue": "/fd sha256"
                      },
                      {
                        "parameterName": "TimeStamp",
                        "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                      }
                    ],
                    "toolName": "signtool.exe",
                    "toolVersion": "6.2.9304.0"
                  }
                ]
              SessionTimeout: '60'
              MaxConcurrency: '50'
              MaxRetryAttempts: '5'

          - task: PowerShell@2
            displayName: Build MsixBundle
            inputs:
              filePath: 'Build.ps1'
              arguments: -Configuration "${{ configuration }}" -Version $(MSIXVersion) -BuildStep "msixbundle" -IsAzurePipelineBuild

          - task: EsrpCodeSigning@2
            inputs:
              ConnectedServiceName: 'Xlang Code Signing'
              FolderPath: 'AppxBundles\${{ configuration }}'
              Pattern: '*.msixbundle'
              signConfigType: 'inlineSignParams'
              inlineOperation: |
                [
                  {
                    "keycode": "CP-230012",
                    "operationSetCode": "SigntoolvNextSign",
                    "parameters": [
                      {
                        "parameterName": "OpusName",
                        "parameterValue": "Microsoft"
                      },
                      {
                        "parameterName": "OpusInfo",
                        "parameterValue": "http://www.microsoft.com"
                      },
                      {
                        "parameterName": "PageHash",
                        "parameterValue": "/NPH"
                      },
                      {
                        "parameterName": "FileDigest",
                        "parameterValue": "/fd sha256"
                      },
                      {
                        "parameterName": "TimeStamp",
                        "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                      }
                    ],
                    "toolName": "signtool.exe",
                    "toolVersion": "6.2.9304.0"
                  }
                ]
              SessionTimeout: '60'
              MaxConcurrency: '50'
              MaxRetryAttempts: '5'

        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: Publish MSIX Bundle Artifacts
            condition: ${{ containsValue(parameters.Configurations, 'release') }}
            artifactName: MsixBundle_Release
            targetPath: AppxBundles\Release
          - output: pipelineArtifact
            displayName: Publish MSIX Bundle Artifacts
            condition: ${{ containsValue(parameters.Configurations, 'debug') }}
            artifactName: MsixBundle_Debug
            targetPath: AppxBundles\Debug

    - stage: Store_Publish
      dependsOn:
      - Build_MsixBundle
      condition: |
        and
        (
          in(dependencies.Build_MsixBundle.result, 'Succeeded'),
          eq(variables['EnableStorePublishing'], 'true')
        )
      jobs:
      - job: Store_Publish
        timeoutInMinutes: 360
        steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: MsixBundle_Release
            targetPath: StorePublish

        - task: MicrosoftTDBuild.tdbuild-task.tdbuild-task.TouchdownBuildTask@1
          displayName: Download and Use Localization Files
          condition: eq(variables['EnableLocalization'], 'true')
          retryCountOnTaskFailure: 2
          inputs:
            teamId: 71220
            authId: $(TouchdownAppId)
            authKey: $(TouchdownAppKey)
            resourceFilePath: |
              **\en-US\PDP.xml
            localizationTarget: false
            appendRelativeDir: true
            pseudoSetting: Included

        - task: PowerShell@2
          displayName: Move Loc files one level up
          condition: eq(variables['EnableLocalization'], 'true')
          inputs:
            targetType: inline
            script: >-
              $Files = Get-ChildItem . -R -Filter 'PDP.xml' | ? FullName -Like '*en-US\*\PDP.xml'

              $Files | % { Move-Item -Verbose $_.Directory $_.Directory.Parent.Parent -EA:Ignore }
            pwsh: true

        - task: MS-RDX-MRO.windows-store-publish-dev.package-task.store-package@2
          displayName: 'Create Staging StoreBroker Package'
          condition: eq(variables['BuildingBranch'], 'staging')
          inputs:
            serviceEndpoint: 'DevHomeCanary StoreBroker'
            sbConfigPath: '$(System.DefaultWorkingDirectory)\build\store\canary\SBConfig.json'
            sourceFolder: 'StorePublish'
            contents: '*.msixbundle'
            pdpPath: '$(System.DefaultWorkingDirectory)\build\store\canary\PDPs'
            pdpMediaPath: '$(System.DefaultWorkingDirectory)\build\store\canary\media'
            outSBName: DevHomeStoreSubmissionPackage
            pdpInclude: 'PDP.xml'

        - task: MS-RDX-MRO.windows-store-publish-dev.publish-task.store-publish@2
          displayName: 'Publish Staging StoreBroker Package'
          condition: eq(variables['BuildingBranch'], 'staging')
          inputs:
            serviceEndpoint: 'DevHomeCanary StoreBroker'
            appId: 9MX22N5S7HRD
            inputMethod: JsonAndZip
            jsonPath: '$(System.DefaultWorkingDirectory)\SBOutDir\DevHomeStoreSubmissionPackage.json'
            zipPath: '$(System.DefaultWorkingDirectory)\SBOutDir\DevHomeStoreSubmissionPackage.zip'
            force: true
            deletePackages: true
            numberOfPackagesToKeep: 2
            jsonZipUpdateMetadata: true
            updateImages: true

        - task: MS-RDX-MRO.windows-store-publish-dev.package-task.store-package@2
          displayName: 'Create Release StoreBroker Package'
          condition: eq(variables['BuildingBranch'], 'release')
          inputs:
            serviceEndpoint: 'DevHome StoreBroker'
            sbConfigPath: '$(System.DefaultWorkingDirectory)\build\store\preview\SBConfig.json'
            sourceFolder: 'StorePublish'
            contents: '*.msixbundle'
            pdpPath: '$(System.DefaultWorkingDirectory)\build\store\preview\PDPs'
            pdpMediaPath: '$(System.DefaultWorkingDirectory)\build\store\preview\media'
            outSBName: DevHomeStoreSubmissionPackage
            pdpInclude: 'PDP.xml'

        - task: MS-RDX-MRO.windows-store-publish-dev.publish-task.store-publish@2
          displayName: 'Publish Release StoreBroker Package'
          condition: eq(variables['BuildingBranch'], 'release')
          inputs:
            serviceEndpoint: 'DevHome StoreBroker'
            appId: 9N8MHTPHNGVV
            inputMethod: JsonAndZip
            jsonPath: '$(System.DefaultWorkingDirectory)\SBOutDir\DevHomeStoreSubmissionPackage.json'
            zipPath: '$(System.DefaultWorkingDirectory)\SBOutDir\DevHomeStoreSubmissionPackage.zip'
            force: true
            deletePackages: true
            numberOfPackagesToKeep: 2
            jsonZipUpdateMetadata: true
            updateImages: true

        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish StoreBroker Artifacts'
            condition: or(eq(variables['BuildingBranch'], 'staging'), eq(variables['BuildingBranch'], 'release'))
            artifactName: StoreBrokerPackage
            targetPath: '$(System.DefaultWorkingDirectory)\SBOutDir'