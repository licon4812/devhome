<?xml version="1.0" encoding="utf-8"?>
<UserControl
    x:Class="DevHome.SetupFlow.Views.QuickstartPlaygroundView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:viewmodels="using:DevHome.SetupFlow.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:setupFlowBehaviors="using:DevHome.SetupFlow.Behaviors"
    xmlns:controls="using:DevHome.SetupFlow.Controls"
    xmlns:ctcontrols="using:CommunityToolkit.WinUI.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d">

    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <setupFlowBehaviors:SetupFlowNavigationBehavior.NextTemplate>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button x:Uid="QuickstartPlaygroundSaveButton"
                    Command="{x:Bind ViewModel.SaveProjectCommand}"
                    Margin="4, 0"
                    TabIndex="30" />
            <Button Command="{x:Bind ViewModel.LaunchProjectHostCommand}"
                    Style="{ThemeResource AccentButtonStyle}"
                    Visibility="{x:Bind ViewModel.IsLaunchButtonVisible, Mode=OneWay}"
                    Margin="4, 0"
                    Content="{x:Bind ViewModel.LaunchButtonText, Mode=OneWay}"
                    TabIndex="31"/>
            <DropDownButton x:Uid="QuickstartPlaygroundLaunchDropDownButton"
                    Visibility="{x:Bind ViewModel.IsLaunchDropDownVisible, Mode=OneWay}"
                    Style="{ThemeResource AccentButtonStyle}"
                    Margin="4, 0"
                    TabIndex="32">
                <DropDownButton.Flyout>
                    <MenuFlyout x:Name="DropDownButtonFlyout" />
                </DropDownButton.Flyout>
            </DropDownButton>
        </StackPanel>
    </setupFlowBehaviors:SetupFlowNavigationBehavior.NextTemplate>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///DevHome.SetupFlow/Styles/SetupFlowStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///DevHome.SetupFlow/Styles/QuickstartStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <controls:SetupShell Orchestrator="{x:Bind ViewModel.Orchestrator, Mode=OneWay}">
        <Grid x:Name="ContentArea">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" VerticalAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Vertical" Grid.Row="0">
                        <Grid Margin="0, 0, 0, 30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Uid="QuickstartPlaygroundPromptHeader"
                                       Grid.Column="0"
                                       VerticalAlignment="Center"
                                       TextWrapping="WrapWholeWords"
                                       Margin="10"/>
                            <ctcontrols:WrapPanel Grid.Column="1" 
                                        Orientation="Horizontal"
                                        HorizontalAlignment="Right" 
                                        Margin="10">
                                <TextBlock x:Name="ExtensionProviderTextBlock" 
                                           x:Uid="QuickstartPlaygroundExtensionProvider"
                                           Style="{ThemeResource BodyTextBlockStyle}"
                                           Margin="10"
                                           VerticalAlignment="Center"/>
                                <ComboBox x:Name="ExtensionProviderComboBox"
                                          AutomationProperties.LabeledBy="{Binding ElementName=ExtensionProviderTextBlock}"
                                          ItemsSource="{x:Bind ViewModel.QuickstartProviders}"
                                          DisplayMemberPath="DisplayName"
                                          SelectedItem="{x:Bind ViewModel.ActiveQuickstartSelection, Mode=TwoWay}"
                                          MinWidth="200"
                                          IsEnabled="{x:Bind ViewModel.EnableQuickstartProjectCombobox, Mode=OneWay}"
                                          Loading="ExtensionProviderComboBox_Loading"
                                          SelectionChanged="ExtensionProviderComboBox_SelectionChanged"
                                          IsDropDownOpen="{x:Bind ViewModel.IsQuickstartProjectComboboxExpanded, Mode=TwoWay}"
                                          Margin="10"
                                          VerticalAlignment="Center"
                                          TabIndex="1"/>
                            </ctcontrols:WrapPanel>
                        </Grid>
                        <ctcontrols:WrapPanel x:Name="ExamplePrompts"
                                              Orientation="Horizontal"
                                              Visibility="{x:Bind ViewModel.ShowExamplePrompts, Mode=OneWay}">
                            <Button Command="{x:Bind ViewModel.CopyExamplePromptCommand}" 
                                CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}" 
                                Content="{x:Bind ViewModel.SamplePromptOne, Mode=OneWay}"
                                Style="{StaticResource SamplePromptStyle}" 
                                TabIndex="2"/>
                            <Button Command="{x:Bind ViewModel.CopyExamplePromptCommand}" 
                                CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}" 
                                Content="{x:Bind ViewModel.SamplePromptTwo, Mode=OneWay}"
                                Style="{StaticResource SamplePromptStyle}"
                                TabIndex="3"/>
                            <Button Command="{x:Bind ViewModel.CopyExamplePromptCommand}" 
                                CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}" 
                                Content="{x:Bind ViewModel.SamplePromptThree, Mode=OneWay}"
                                Style="{StaticResource SamplePromptStyle}" 
                                TabIndex="4"/>
                        </ctcontrols:WrapPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBox Grid.Row="0"
                                     PlaceholderText="{x:Bind ViewModel.PromptTextBoxPlaceholder, Mode=OneWay}"
                                     x:Name="CustomPrompt" 
                                     TextWrapping="Wrap"
                                     AcceptsReturn="True" 
                                     MinWidth="800"
                                     MinHeight="60"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Stretch"
                                     Margin="10"
                                     IsReadOnly="{x:Bind ViewModel.IsPromptTextBoxReadOnly, Mode=OneWay}"
                                     MaxLength="2000"
                                     TabIndex="5"
                                     TextChanged="CustomPrompt_TextChanged"
                                     Text="{x:Bind ViewModel.CustomPrompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Grid.ColumnSpan="2"
                                     GotFocus="CustomPrompt_GotFocus"/>
                            <TextBlock Grid.Row="1" Width="Auto" x:Name="PromptCharacterCount" TextAlignment="Right" Margin="0 0 10 10"/>
                            <Grid Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                                    <TextBlock x:Uid="QuickstartPlaygroundAIWarning"
                                               VerticalAlignment="Center"
                                               Margin="10 0 0 0"/>
                                    <StackPanel Orientation="Horizontal"
                                                Visibility="{x:Bind ViewModel.ShowPrivacyAndTermsLink, Mode=OneWay}">
                                        <HyperlinkButton x:Uid="QuickstartPlaygroundAIWarningTerms"
                                             NavigateUri="{x:Bind ViewModel.TermsUri, Mode=OneWay}" 
                                             ToolTipService.ToolTip="{x:Bind ViewModel.TermsUri, Mode=OneWay}"
                                             VerticalAlignment="Center"
                                             TabIndex="7"/>
                                        <TextBlock VerticalAlignment="Center">|</TextBlock>
                                        <HyperlinkButton x:Uid="QuickstartPlaygroundAIWarningPrivacy"
                                             NavigateUri="{x:Bind ViewModel.PrivacyUri, Mode=OneWay}"
                                             ToolTipService.ToolTip="{x:Bind ViewModel.PrivacyUri, Mode=OneWay}"
                                             VerticalAlignment="Center"
                                             TabIndex="8"/>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 10 0">
                                    <Button x:Uid="QuickstartPlaygroundGenerateButton"
                                            x:Name="GenerateButton" 
                                            Margin="10 0 0 0"
                                            Style="{ThemeResource AccentButtonStyle}"
                                            Command="{x:Bind ViewModel.GenerateCodespaceCommand}"
                                            VerticalAlignment="Center"
                                            TabIndex="6">
                                        <ToolTipService.ToolTip>
                                            <ToolTip x:Uid="QuickstartPlaygroundGenerateButtonTooltip"/>
                                        </ToolTipService.ToolTip>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </StackPanel>
                    <Grid Grid.Row="1" Visibility="{x:Bind ViewModel.GenerateCodespaceCommand.IsRunning, Mode=OneWay}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>
                        <!-- TODO: needs to better handle resizing; text can get truncated here -->
                        <TextBlock x:Name="ProgressStatus"
                               Grid.Column="0"
                               Text="{x:Bind ViewModel.ProgressMessage,Mode=OneWay}" 
                               Margin="10"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               TextWrapping="WrapWholeWords"/>
                        <ProgressBar AutomationProperties.LabeledBy="{Binding ElementName=ProgressStatus}"
                                 Grid.Column="1"
                                 Margin="30"
                                 Width="400"
                                 IsHitTestVisible="False"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Value="{x:Bind ViewModel.ProgressValue, Mode=OneWay}"/>
                    </Grid>
                    <!--Progress output-->
                    <Grid Grid.Row="2" Visibility="{x:Bind ViewModel.IsProgressOutputVisible, Mode=OneWay}">
                        <StackPanel Orientation="Vertical">
                            <Expander x:Uid="QuickstartPlaygroundExtensionProgressOutput"
                                  Margin="10"
                                  IsExpanded="True"
                                  ExpandDirection="Down"
                                  TabIndex="10">
                                <Expander.Content>
                                    <ScrollViewer x:Name="ProgressOutputScrollViewer" 
                                          VerticalScrollBarVisibility="Auto" 
                                          HorizontalScrollBarVisibility="Auto" 
                                          MaxHeight="300"
                                          Margin="20"
                                          HorizontalAlignment="Left" 
                                          TabIndex="11" />
                                </Expander.Content>
                            </Expander>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>

            <!--Bottom half of UI-->
            <Grid Grid.Row="2" Visibility="{x:Bind ViewModel.IsErrorViewVisible, Mode=OneWay}">
                <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <Image Style="{StaticResource ErrorIconStyle}"/>
                    <TextBlock x:Uid="QuickstartPlaygroundGenerationFailed" TextWrapping="WrapWholeWords" />
                    <TextBlock Text="{x:Bind ViewModel.ErrorMessage, Mode=OneWay}" TextWrapping="WrapWholeWords" />
                </StackPanel>
            </Grid>

            <Grid Grid.Row="2" Visibility="{x:Bind ViewModel.IsFileViewVisible, Mode=OneWay}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="1" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="8" HorizontalAlignment="Left">
                            <TextBlock x:Uid="QuickstartPlaygroundGenerationOutputLabel"
                                       Margin="2, 20, 20, 20"/>
                            <StackPanel Orientation="Horizontal" Margin="8" HorizontalAlignment="Right">
                                <Button x:Name="positiveFeedbackButton"
                                        x:Uid="QuickstartPlaygroundLikeButton"
                                        Margin="4,0"
                                        VerticalAlignment="Bottom"
                                        TabIndex="20">
                                    <FontIcon Glyph="👍" FontFamily="Segoe Fluent" />
                                    <Button.Flyout>
                                        <Flyout x:Name="positiveFeedbackFlyout" Closed="PositiveFeedbackFlyout_Closed">
                                            <StackPanel>
                                                <FontIcon Glyph="👍" FontFamily="Segoe Fluent"/>
                                                <TextBlock x:Uid="QuickstartPlaygroundFeedbackHeader"
                                                           x:Name="posProvideAddtionalFeedbackText"
                                                           Style="{ThemeResource BaseTextBlockStyle}"
                                                           Visibility="{x:Bind ViewModel.PositivesGroupOne, Mode=OneWay}"/>
                                                <TextBox x:Uid="QuickstartPlaygroundPositiveFeedbackPromptPlaceholder"
                                                         Margin="4"
                                                         x:Name="positiveFeedbackTextBox"
                                                         TextWrapping="Wrap"
                                                         Visibility="{x:Bind ViewModel.PositivesGroupOne, Mode=OneWay}" />
                                                <Button x:Uid="QuickstartPlaygroundSubmitFeedback"
                                                        x:Name="posSubmitFeedbackButton"
                                                        Click="PositiveFeedbackConfirmation_Click"
                                                        HorizontalAlignment="Right"
                                                        Visibility="{x:Bind ViewModel.PositivesGroupOne, Mode=OneWay}"/>
                                                <TextBlock x:Uid="QuickstartPlaygroundFeedbackSubmitted"
                                                           x:Name="posFeedbackSuccessText"
                                                           Style="{ThemeResource BaseTextBlockStyle}"
                                                           Visibility="{x:Bind ViewModel.PositivesGroupTwo, Mode=OneWay}"/>
                                                <Button x:Uid="CloseButton"
                                                        x:Name="posCloseFlyoutButton"
                                                        Click="PosCloseFlyout_Click"
                                                        HorizontalAlignment="Right"
                                                        Visibility="{x:Bind ViewModel.PositivesGroupTwo, Mode=OneWay}"/>
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="PositiveFeedbackToolTip" x:Uid="QuickstartPlaygroundFeedbackLikeTooltip"/>
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button x:Name="negativeFeedbackButton"
                                        x:Uid="QuickstartPlaygroundDislikeButton"
                                        Margin="4,0"
                                        VerticalAlignment="Bottom"
                                        TabIndex="21">
                                    <FontIcon Glyph="👎" FontFamily="Segoe Fluent" />
                                    <Button.Flyout>
                                        <Flyout x:Name="negativeFeedbackFlyout" Closed="NegativeFeedbackFlyout_Closed">
                                            <StackPanel>
                                                <FontIcon Glyph="👎" FontFamily="Segoe Fluent"/>
                                                <TextBlock x:Uid="QuickstartPlaygroundFeedbackHeader"
                                                           x:Name="negProvideAddtionalFeedbackText"
                                                           Style="{ThemeResource BaseTextBlockStyle}"
                                                           Visibility="{x:Bind ViewModel.NegativesGroupOne, Mode=OneWay}"/>
                                                <TextBox x:Uid="QuickstartPlaygroundNegativeFeedbackPromptPlaceholder"
                                                         x:Name="negativeFeedbackTextBox"
                                                         Margin="4"
                                                         TextWrapping="Wrap"
                                                         Visibility="{x:Bind ViewModel.NegativesGroupOne, Mode=OneWay}"/>
                                                <Button x:Uid="QuickstartPlaygroundSubmitFeedback"
                                                        x:Name="negSubmitFeedbackButton"
                                                        Click="NegativeFeedbackConfirmation_Click"
                                                        HorizontalAlignment="Right"
                                                        Visibility="{x:Bind ViewModel.NegativesGroupOne, Mode=OneWay}"/>
                                                <TextBlock x:Uid="QuickstartPlaygroundFeedbackSubmitted"
                                                           x:Name="negFeedbackSuccessText"
                                                           Style="{ThemeResource BaseTextBlockStyle}"
                                                           Visibility="{x:Bind ViewModel.NegativesGroupTwo, Mode=OneWay}"/>
                                                <Button x:Uid="CloseButton"
                                                        x:Name="negCloseFlyoutButton"
                                                        Click="NegCloseFlyout_Click"
                                                        HorizontalAlignment="Right"
                                                        Visibility="{x:Bind ViewModel.NegativesGroupTwo, Mode=OneWay}"/>
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NegativeFeedbackToolTip" x:Uid="QuickstartPlaygroundFeedbackDislikeTooltip"/>
                                    </ToolTipService.ToolTip>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="8" HorizontalAlignment="Right">
                            <TextBlock x:Uid="QuickstartPlaygroundReferenceSamplePrefix" VerticalAlignment="Center"/>
                            <TextBlock xmlns:ui="using:CommunityToolkit.WinUI" VerticalAlignment="Center" Margin="5" >
                                    <Hyperlink ui:HyperlinkExtensions.Command="{x:Bind ViewModel.OpenReferenceSampleCommand}"
                                               ui:HyperlinkExtensions.CommandParameter="{Binding}">[1]</Hyperlink>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                    <Grid x:Name="FileView" 
                          Grid.Row="2" 
                          BorderBrush="{ThemeResource TextControlElevationBorderBrush}" 
                          BorderThickness="10"
                          Margin="0 0 20 0"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <Grid.Resources>
                            <DataTemplate x:Key="FolderTemplate" 
                                  x:DataType="viewmodels:ExplorerItem">
                                <TreeViewItem AutomationProperties.Name="{x:Bind Name}"
                                      ItemsSource="{x:Bind Children}" 
                                      IsExpanded="True">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="20" 
                                       Source="../Assets/folder.png"/>
                                        <TextBlock Margin="0,0,10,0"/>
                                        <TextBlock Text="{x:Bind Name}" />
                                    </StackPanel>
                                </TreeViewItem>
                            </DataTemplate>

                            <DataTemplate x:Key="FileTemplate" 
                                  x:DataType="viewmodels:ExplorerItem">
                                <TreeViewItem AutomationProperties.Name="{x:Bind Name}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="20"
                                       Source="../Assets/file.png"/>
                                        <TextBlock Margin="0,0,10,0"/>
                                        <TextBlock Text="{x:Bind Name}"/>
                                    </StackPanel>
                                </TreeViewItem>
                            </DataTemplate>
                            <viewmodels:ExplorerItemTemplateSelector x:Key="ExplorerItemTemplateSelector"
                                                        FolderTemplate="{StaticResource FolderTemplate}"
                                                        FileTemplate="{StaticResource FileTemplate}" />
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TreeView x:Name="FolderHierarchy"
                                  Grid.Column="0" 
                                  Height="Auto" 
                                  Margin="20" 
                                  ItemsSource="{x:Bind ViewModel.DataSource, Mode=OneWay}" 
                                  ItemTemplateSelector="{StaticResource ExplorerItemTemplateSelector}" 
                                  ItemInvoked="FolderHierarchy_ItemInvoked"
                                  TabIndex="23"/>
                        <TextBlock x:Name="GeneratedFileContent"
                                   Text="{x:Bind ViewModel.GeneratedFileContent, Mode=OneWay}"
                                   Grid.Column="1"
                                   FontFamily="{StaticResource CascadiaMonoFontFamily}"
                                   Margin="20"
                                   IsTextSelectionEnabled="True"
                                   TextWrapping="WrapWholeWords"
                                   IsTabStop="True"
                                   TabIndex="24">
                        </TextBlock>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </controls:SetupShell>
</UserControl>
