<!-- Copyright (c) Microsoft Corporation.. -->
<!-- Licensed under the MIT License. -->

<UserControl
    x:Class="DevHome.SetupFlow.Views.AppManagementView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ctControls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:controls="using:DevHome.SetupFlow.Controls"
    xmlns:selectors="using:DevHome.SetupFlow.Selectors"
    xmlns:viewmodels="using:DevHome.SetupFlow.ViewModels"
    xmlns:behaviors="using:DevHome.SetupFlow.Behaviors"
    xmlns:views="using:DevHome.SetupFlow.Views"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///DevHome.SetupFlow/Styles/SetupFlowStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:DoubleToVisibilityConverter x:Key="CountToVisibilityConverter" GreaterThan="0" FalseValue="Visible" TrueValue="Collapsed" />
        </ResourceDictionary>
    </UserControl.Resources>

    <i:Interaction.Behaviors >
        <behaviors:AppManagementBehavior />
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
        </ic:EventTriggerBehavior>
        <ic:EventTriggerBehavior EventName="Unloaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.UnloadedCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <!-- Page split layout -->
    <Grid ColumnSpacing="10" MaxWidth="{ThemeResource MaxPageContentWidth}" Margin="{ThemeResource ContentPageMargin}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*" MaxWidth="318"/>
        </Grid.ColumnDefinitions>

        <!-- Main/Center panel -->
        <controls:SetupShell x:Uid="SetupShell_AppManagement"
                             x:Name="SetupShell"
                             Orchestrator="{x:Bind ViewModel.Orchestrator, Mode=OneWay}"
                             Foreground="{ThemeResource TextFillColorSecondary}">
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Search bar -->
                <AutoSuggestBox
                    x:Name="SearchBox"
                    QueryIcon="Find"
                    HorizontalAlignment="Left"
                    Width="400"
                    Margin="0,0,0,20"
                    x:Uid="SearchBox">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="TextChanged">
                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.SearchTextChangedCommand}" CommandParameter="{Binding Text, ElementName=SearchBox}"/>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </AutoSuggestBox>

                <!-- Main content -->
                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Name="MainContent" AutomationProperties.AccessibilityView="Raw">
                    <ContentControl
                        IsTabStop="False"
                        Margin="0 0 10 0"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Content="{x:Bind ViewModel.CurrentView, Mode=OneWay}">
                        <ContentControl.ContentTemplateSelector>
                            <selectors:AppManagementViewSelector>
                                <!-- Default/Main template -->
                                <selectors:AppManagementViewSelector.MainTemplate>
                                    <DataTemplate>
                                        <views:PackageCatalogListView />
                                    </DataTemplate>
                                </selectors:AppManagementViewSelector.MainTemplate>
                                <!-- Search template -->
                                <selectors:AppManagementViewSelector.SearchTemplate>
                                    <DataTemplate>
                                        <views:SearchView />
                                    </DataTemplate>
                                </selectors:AppManagementViewSelector.SearchTemplate>
                                <!-- Shimmer search template -->
                                <selectors:AppManagementViewSelector.ShimmerSearchTemplate>
                                    <DataTemplate>
                                        <views:ShimmerSearchView PackageCount="6" />
                                    </DataTemplate>
                                </selectors:AppManagementViewSelector.ShimmerSearchTemplate>
                            </selectors:AppManagementViewSelector>
                        </ContentControl.ContentTemplateSelector>
                    </ContentControl>
                </ScrollViewer>
            </Grid>
        </controls:SetupShell>

        <!-- Right/Side panel -->
        <Grid AutomationProperties.Name="{x:Bind SidePanelTitle.Text, Mode=OneWay}"
              Grid.Column="1"
              Margin="0,0,0,4"
              Style="{ThemeResource CardGridSecondaryStyle}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Header -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <!-- Header text -->
                <StackPanel Grid.Row="0" Padding="5 0" Orientation="Vertical" Spacing="4">
                    <TextBlock x:Name="SidePanelTitle" Style="{ThemeResource BaseTextBlockStyle}" x:Uid="SelectedPackages" />
                    <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource TextFillColorSecondary}" Text="{x:Bind ViewModel.ApplicationsAddedText,Mode=OneWay}"/>
                </StackPanel>
                <!-- Header remove all button -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1">
                    <HyperlinkButton
                        AutomationProperties.AutomationControlType="Button"
                        Command="{x:Bind ViewModel.RemoveAllPackagesCommand}"
                        IsEnabled="{x:Bind ViewModel.EnableRemoveAll, Mode=OneWay}">
                        <TextBlock x:Uid="RemoveAll" />
                    </HyperlinkButton>
                </StackPanel>
            </Grid>

            <!-- Package notification bar -->
            <InfoBar Grid.Row="1" IsOpen="{x:Bind ViewModel.ShowInstalledPackageWarning, Mode=OneWay}"
                     Severity="Informational"
                     Margin="0,10"
                     IsClosable="False">
                <TextBlock x:Uid="AppAlreadyInstalledNotification"
                           TextWrapping="WrapWholeWords"
                           Padding="5"/>
            </InfoBar>

            <!-- No package selected -->
            <TextBlock Grid.Row="2"
                       x:Uid="NoApplicationsAdded"
                       Visibility="{x:Bind ViewModel.SelectedPackages.Count,Mode=OneWay, Converter={StaticResource CountToVisibilityConverter}}"
                       Style="{ThemeResource CaptionTextBlockStyle}"
                       Foreground="{ThemeResource TextFillColorSecondary}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>

            <!-- Package list view -->
            <ListView Grid.Row="2" ItemsSource="{x:Bind ViewModel.SelectedPackages, Mode=OneWay}" SelectionMode="None">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="viewmodels:PackageViewModel">
                        <controls:PackageDetailsSettingsCard AutomationProperties.AccessibilityView="Raw" AutomationProperties.Name="{Binding PackageTitle}">
                            <ToolTipService.ToolTip>
                                <controls:PackageDetailsTooltip Package="{Binding}" />
                            </ToolTipService.ToolTip>
                            <ctControls:SettingsCard.Header>
                                <TextBlock Style="{ThemeResource AppManagementPackageTitleTextBlock}" Text="{Binding PackageTitle}"/>
                            </ctControls:SettingsCard.Header>
                            <ctControls:SettingsCard.Description>
                                <TextBlock Style="{ThemeResource AppManagementPackageDescriptionTextBlock}" Text="{Binding PackageFullDescription}"/>
                            </ctControls:SettingsCard.Description>
                            <ctControls:SettingsCard.HeaderIcon>
                                <ImageIcon Source="{x:Bind Icon, Mode=OneWay}"/>
                            </ctControls:SettingsCard.HeaderIcon>
                            <ctControls:SettingsCard.ActionIcon>
                                <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE711;"/>
                            </ctControls:SettingsCard.ActionIcon>
                            <Button
                                AutomationProperties.Name="{x:Bind ButtonAutomationName, Mode=OneWay}"
                                Command="{x:Bind ToggleSelectionCommand, Mode=OneWay}"
                                FontSize="{ThemeResource CaptionTextBlockFontSize}"
                                Style="{ThemeResource AlternateCloseButtonStyle}">
                            </Button>
                        </controls:PackageDetailsSettingsCard>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Grid>
</UserControl>
